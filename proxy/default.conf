# Upstreams

upstream gogs {
    server gogs:3000;
}

upstream code-server {
    server code-server:8443;
}

upstream nextcloud {
    server nextcloud:443;
}

upstream qbittorrent {
    server qbittorrent:8080;
}

upstream portainer {
    server portainer:9000;
}

upstream plex {
    server plex:32400;
}


# Port 80 redirects

server {
    listen 80;
    server_name git.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name code.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name cloud.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name dl.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name docker.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name plex.localhost;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    server_name localhost;

    return 301 https://$server_name$request_uri;
}



# Proxy

server {
    listen                  443 ssl;
    server_name             git.localhost;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://gitea/;
    }
}

server {
    listen                  443 ssl;
    server_name             code.localhost;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://code-server/;
    }
}

server {
    listen                  443 ssl;
    server_name             cloud.localhost;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          https://nextcloud/;
    }
}

server {
    listen                  443 ssl;
    server_name             dl.localhost;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://qbittorrent/;
    }
}

server {
    listen                  443 ssl;
    server_name             docker.localhost;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://portainer/;
    }
}

server {
    listen                  443 ssl;
    server_name             plex.localhost;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                $host;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          upgrade;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass          http://plex/;
    }
}